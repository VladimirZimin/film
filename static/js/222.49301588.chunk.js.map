{"version":3,"file":"static/js/222.49301588.chunk.js","mappings":"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","sources":["hooks/useResize.js","components/Cast/Cast.js","../node_modules/@mui/icons-material/NavigateBefore.js","../node_modules/@mui/icons-material/NavigateNext.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\n\r\nconst useResize = () => {\r\n  const [size, setSize] = useState([0, 0]);\r\n  useEffect(() => {\r\n    const getSize = () => setSize([window.innerWidth, window.innerHeight]);\r\n    getSize();\r\n    window.addEventListener(\"resize\", getSize);\r\n    return () => window.removeEventListener(\"resize\", getSize);\r\n  }, []);\r\n\r\n  return size;\r\n};\r\n\r\nexport default useResize;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport NotFound from \"components/NotFound/NotFound\";\r\nimport { useGetMoviesCreditsQuery } from \"redux/movies/moviesApi\";\r\nimport Loader from \"components/Loader/Loader\";\r\nimport useResize from \"hooks/useResize\";\r\nimport { IconButton, Stack } from \"@mui/material\";\r\nimport NavigateNextIcon from \"@mui/icons-material/NavigateNext\";\r\nimport NavigateBeforeIcon from \"@mui/icons-material/NavigateBefore\";\r\n\r\nconst Cast = () => {\r\n  const [screenSize, setScreenSize] = useState(null);\r\n  const [castIdx, setCastIdx] = useState([]);\r\n  const [nextBtn, setNextBtn] = useState(false);\r\n  const [prevBtn, setPrevBtn] = useState(true);\r\n  const { movieId } = useParams();\r\n  const size = useResize();\r\n\r\n  const { data: films, isLoading } = useGetMoviesCreditsQuery(movieId);\r\n\r\n  useEffect(() => {\r\n    setScreenSize(size[0]);\r\n  }, [size]);\r\n\r\n  useEffect(() => {\r\n    if (screenSize >= 1515) {\r\n      setCastIdx([0, 1, 2, 3, 4, 5, 6, 7, 8]);\r\n    } else if (screenSize <= 1515 && screenSize >= 1400) {\r\n      setCastIdx([0, 1, 2, 3, 4, 5, 6, 7]);\r\n    } else if (screenSize <= 1400 && screenSize >= 1250) {\r\n      setCastIdx([0, 1, 2, 3, 4, 5, 6]);\r\n    } else if (screenSize <= 1250 && screenSize >= 920) {\r\n      setCastIdx([0, 1, 2, 3, 4]);\r\n    } else if (screenSize <= 920 && screenSize >= 770) {\r\n      setCastIdx([0, 1, 2, 3]);\r\n    } else if (screenSize <= 770 && screenSize >= 600) {\r\n      setCastIdx([0, 1, 2]);\r\n    } else if (screenSize <= 600 && screenSize >= 450) {\r\n      setCastIdx([0, 1]);\r\n    } else if (screenSize <= 450) {\r\n      setCastIdx([0]);\r\n    }\r\n  }, [screenSize]);\r\n\r\n  const handleNextCast = () => {\r\n    setNextBtn(films.cast.length - 2 === castIdx[castIdx.length - 1] && true);\r\n    setCastIdx(castIdx.map((idx) => idx + 1));\r\n    setPrevBtn(false);\r\n  };\r\n\r\n  const handlePrevCast = () => {\r\n    setPrevBtn(1 === castIdx[0] && true);\r\n    setCastIdx(castIdx.map((idx) => idx - 1));\r\n    setNextBtn(false);\r\n  };\r\n\r\n  if (!films) return null;\r\n\r\n  return (\r\n    <div>\r\n      {isLoading ? (\r\n        <Loader />\r\n      ) : (\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            gap: \"10px\",\r\n            width: \"100%\",\r\n          }}\r\n        >\r\n          <Stack\r\n            direction=\"row\"\r\n            alignItems=\"center\"\r\n            spacing={1}\r\n            sx={{ mr: \"10px\" }}\r\n          >\r\n            <IconButton\r\n              aria-label=\"prev\"\r\n              size=\"large\"\r\n              type=\"button\"\r\n              onClick={handlePrevCast}\r\n              disabled={prevBtn}\r\n              sx={{\r\n                color: \"rgb(255 255 255 / 50%)\",\r\n                border: \"1px solid #ea5f5f10\",\r\n              }}\r\n            >\r\n              <NavigateBeforeIcon fontSize=\"large\" />\r\n            </IconButton>\r\n          </Stack>\r\n\r\n          {castIdx.map((idx) => (\r\n            <div\r\n              key={films.cast[idx]?.id}\r\n              style={{\r\n                width: \"150px\",\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n              }}\r\n            >\r\n              {films.cast[idx]?.profile_path ? (\r\n                <img\r\n                  src={`https://image.tmdb.org/t/p/w500/${films.cast[idx].profile_path}`}\r\n                  alt={films.cast[idx]?.name}\r\n                />\r\n              ) : (\r\n                <>\r\n                  <NotFound />\r\n                </>\r\n              )}\r\n              <p>Ім'я актора: {films.cast[idx]?.name}</p>\r\n              <p>Ім'я персонажа: {films.cast[idx]?.character}</p>\r\n            </div>\r\n          ))}\r\n\r\n          <Stack\r\n            direction=\"row\"\r\n            alignItems=\"center\"\r\n            spacing={1}\r\n            sx={{ ml: \"10px\" }}\r\n          >\r\n            <IconButton\r\n              aria-label=\"next\"\r\n              size=\"large\"\r\n              type=\"button\"\r\n              onClick={handleNextCast}\r\n              disabled={nextBtn}\r\n              sx={{\r\n                color: \"rgb(255 255 255 / 50%)\",\r\n                border: \"1px solid #ea5f5f10\",\r\n              }}\r\n            >\r\n              <NavigateNextIcon fontSize=\"large\" />\r\n            </IconButton>\r\n          </Stack>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cast;\r\n\r\n// const [films, setFilms] = useState(null);\r\n// const [isLoading, setIsLoading] = useState(false);\r\n\r\n// useEffect(() => {\r\n//   const fetcCost = async () => {\r\n//     try {\r\n//       setIsLoading(true);\r\n//       const cast = await api.getMoviesCredits(movieId);\r\n//       setFilms(cast.cast);\r\n//       setIsLoading(false);\r\n//     } catch (error) {\r\n//       setIsLoading(false);\r\n//       console.log(error);\r\n//     }\r\n//   };\r\n//   fetcCost();\r\n// }, [movieId]);\r\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M15.41 7.41 14 6l-6 6 6 6 1.41-1.41L10.83 12z\"\n}), 'NavigateBefore');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M10 6 8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\"\n}), 'NavigateNext');\nexports.default = _default;"],"names":["_useState","useState","_useState2","_slicedToArray","size","setSize","useEffect","getSize","window","innerWidth","innerHeight","addEventListener","removeEventListener","screenSize","setScreenSize","_useState3","_useState4","castIdx","setCastIdx","_useState5","_useState6","nextBtn","setNextBtn","_useState7","_useState8","prevBtn","setPrevBtn","movieId","useParams","useResize","_useGetMoviesCreditsQ","useGetMoviesCreditsQuery","films","data","isLoading","_jsx","children","Loader","_jsxs","style","display","justifyContent","gap","width","Stack","direction","alignItems","spacing","sx","mr","IconButton","type","onClick","map","idx","disabled","color","border","NavigateBeforeIcon","fontSize","_films$cast$idx","_films$cast$idx2","_films$cast$idx3","_films$cast$idx4","_films$cast$idx5","flexDirection","cast","profile_path","src","concat","alt","name","_Fragment","NotFound","character","id","ml","length","NavigateNextIcon","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}