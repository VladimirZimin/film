{"version":3,"file":"static/js/878.1291f540.chunk.js","mappings":"uKAiEA,UA3DgB,WACd,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAYC,EAAAA,EAAAA,QAAO,MAEzBC,GAIIC,EAAAA,EAAAA,IAAwBL,GAHpBM,EAAQF,EAAdG,KACAC,EAASJ,EAATI,UACAC,EAAOL,EAAPK,QAGF,OACEC,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACIH,GAAWD,GACXE,EAAAA,EAAAA,KAACG,EAAAA,EAAM,KAEPH,EAAAA,EAAAA,KAACI,EAAAA,EAAG,CACFC,GAAI,CACFC,QAAS,OACTC,eAAgB,SAChBC,IAAK,QACLN,SAEDN,EAASa,QAAQC,KAAI,SAACC,GAAO,OAC5BC,EAAAA,EAAAA,MAACR,EAAAA,EAAG,CAEFC,GAAI,CACFC,QAAS,OACTO,cAAe,SACfN,eAAgB,SAChBO,MAAO,QACPC,OAAQ,SACRb,SAAA,EAEFF,EAAAA,EAAAA,KAAA,OAAAE,UACEF,EAAAA,EAAAA,KAAA,MACEgB,MAAO,CACLC,UAAW,SACXC,aAAc,OACdC,MAAO,WACPjB,SAEDS,EAAQS,UAGbpB,EAAAA,EAAAA,KAAA,UACEqB,IAAG,iCAAAC,OAAmCX,EAAQY,KAC9CC,IAAKhC,EACLsB,MAAM,OACNC,OAAO,OACPU,MAAM,YAzBHd,EAAQe,GA2BT,OAMlB,C","sources":["components/Trailer/Trailer.js"],"sourcesContent":["import { Box } from \"@mui/material\";\r\nimport Loader from \"components/Loader/Loader\";\r\nimport React, { useRef } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useGetMovieTrailerQuery } from \"redux/movies/moviesApi\";\r\n\r\nconst Trailer = () => {\r\n  const { movieId } = useParams();\r\n  const iframeRef = useRef(null);\r\n\r\n  const {\r\n    data: trailers,\r\n    isLoading,\r\n    isError,\r\n  } = useGetMovieTrailerQuery(movieId);\r\n\r\n  return (\r\n    <>\r\n      {!isError && isLoading ? (\r\n        <Loader />\r\n      ) : (\r\n        <Box\r\n          sx={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            gap: \"15px\",\r\n          }}\r\n        >\r\n          {trailers.results.map((trailer) => (\r\n            <Box\r\n              key={trailer.id}\r\n              sx={{\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                justifyContent: \"center\",\r\n                width: \"700px\",\r\n                height: \"350px\",\r\n              }}\r\n            >\r\n              <div>\r\n                <h2\r\n                  style={{\r\n                    textAlign: \"center\",\r\n                    marginBottom: \"10px\",\r\n                    color: \"#ffffff\",\r\n                  }}\r\n                >\r\n                  {trailer.name}\r\n                </h2>\r\n              </div>\r\n              <iframe\r\n                src={`https://www.youtube.com/embed/${trailer.key}`}\r\n                ref={iframeRef}\r\n                width=\"100%\"\r\n                height=\"100%\"\r\n                title=\"video\"\r\n              ></iframe>\r\n            </Box>\r\n          ))}\r\n        </Box>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Trailer;\r\n\r\n// const [isLoading, setIsLoading] = useState(false);\r\n// const [items, setItems] = useState([]);\r\n// const [error, setError] = useState(false);\r\n\r\n// useEffect(() => {\r\n//   const getTrailer = async () => {\r\n//     try {\r\n//       setIsLoading(true);\r\n//       const data = await api.getMovieTrailer(movieId);\r\n//       setItems(data.results);\r\n//       setIsLoading(false);\r\n//     } catch (error) {\r\n//       setError(true);\r\n//       setIsLoading(false);\r\n//       console.log(error);\r\n//     }\r\n//   };\r\n\r\n//   getTrailer();\r\n// }, [movieId]);\r\n"],"names":["movieId","useParams","iframeRef","useRef","_useGetMovieTrailerQu","useGetMovieTrailerQuery","trailers","data","isLoading","isError","_jsx","_Fragment","children","Loader","Box","sx","display","justifyContent","gap","results","map","trailer","_jsxs","flexDirection","width","height","style","textAlign","marginBottom","color","name","src","concat","key","ref","title","id"],"sourceRoot":""}