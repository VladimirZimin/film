{"version":3,"file":"static/js/878.cfaf412f.chunk.js","mappings":"uKA2EA,UArEgB,WACd,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAYC,EAAAA,EAAAA,QAAO,MAEzBC,GAIIC,EAAAA,EAAAA,IAAwBL,GAHpBM,EAAQF,EAAdG,KACAC,EAASJ,EAATI,UACAC,EAAOL,EAAPK,QAGF,OACEC,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACIH,GAAWD,GACXE,EAAAA,EAAAA,KAACG,EAAAA,EAAM,KAEPH,EAAAA,EAAAA,KAACI,EAAAA,EAAG,CACFC,GAAI,CACFC,QAAS,OAETC,eAAgB,SAEhBC,SAAU,OACVC,IAAK,OACLC,GAAI,OACJC,GAAI,QACJT,SAE2B,IAA5BN,EAASgB,QAAQC,QAChBb,EAAAA,EAAAA,KAAA,KAAGc,MAAO,CAAEC,SAAU,QAASb,SAAC,6GAEhCN,EAASgB,QAAQI,KAAI,SAACC,GAAO,OAC3BC,EAAAA,EAAAA,MAACd,EAAAA,EAAG,CAEFC,GAAI,CACFC,QAAS,OACTa,cAAe,SACfZ,eAAgB,SAChBa,MAAO,QACPC,OAAQ,QACRV,GAAI,QACJT,SAAA,EAEFF,EAAAA,EAAAA,KAAA,OAAAE,UACEF,EAAAA,EAAAA,KAAA,MACEc,MAAO,CACLQ,UAAW,SACXC,aAAc,OACdC,MAAO,WACPtB,SAEDe,EAAQQ,UAGbzB,EAAAA,EAAAA,KAAA,UACE0B,IAAG,iCAAAC,OAAmCV,EAAQW,KAC9CC,IAAKrC,EACL4B,MAAM,OACNC,OAAO,OACPS,MAAM,YA1BHb,EAAQc,GA4BT,OAOpB,C","sources":["components/Trailer/Trailer.js"],"sourcesContent":["import { Box } from \"@mui/material\";\r\nimport Loader from \"components/Loader/Loader\";\r\nimport React, { useRef } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useGetMovieTrailerQuery } from \"redux/movies/moviesApi\";\r\n\r\nconst Trailer = () => {\r\n  const { movieId } = useParams();\r\n  const iframeRef = useRef(null);\r\n\r\n  const {\r\n    data: trailers,\r\n    isLoading,\r\n    isError,\r\n  } = useGetMovieTrailerQuery(movieId);\r\n\r\n  return (\r\n    <>\r\n      {!isError && isLoading ? (\r\n        <Loader />\r\n      ) : (\r\n        <Box\r\n          sx={{\r\n            display: \"flex\",\r\n            // flexDirection: { xs: \"column\", md: \"row\" },\r\n            justifyContent: \"center\",\r\n            // alignItems: \"center\",\r\n            flexWrap: \"wrap\",\r\n            gap: \"15px\",\r\n            mt: \"20px\",\r\n            mb: \"45px\",\r\n          }}\r\n        >\r\n          {trailers.results.length === 0 ? (\r\n            <p style={{ fontSize: \"20px\" }}>Трейлер не знайдено</p>\r\n          ) : (\r\n            trailers.results.map((trailer) => (\r\n              <Box\r\n                key={trailer.id}\r\n                sx={{\r\n                  display: \"flex\",\r\n                  flexDirection: \"column\",\r\n                  justifyContent: \"center\",\r\n                  width: \"700px\",\r\n                  height: \"350px\",\r\n                  mb: \"25px\",\r\n                }}\r\n              >\r\n                <div>\r\n                  <h2\r\n                    style={{\r\n                      textAlign: \"center\",\r\n                      marginBottom: \"10px\",\r\n                      color: \"#ffffff\",\r\n                    }}\r\n                  >\r\n                    {trailer.name}\r\n                  </h2>\r\n                </div>\r\n                <iframe\r\n                  src={`https://www.youtube.com/embed/${trailer.key}`}\r\n                  ref={iframeRef}\r\n                  width=\"100%\"\r\n                  height=\"100%\"\r\n                  title=\"video\"\r\n                ></iframe>\r\n              </Box>\r\n            ))\r\n          )}\r\n        </Box>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Trailer;\r\n\r\n// const [isLoading, setIsLoading] = useState(false);\r\n// const [items, setItems] = useState([]);\r\n// const [error, setError] = useState(false);\r\n\r\n// useEffect(() => {\r\n//   const getTrailer = async () => {\r\n//     try {\r\n//       setIsLoading(true);\r\n//       const data = await api.getMovieTrailer(movieId);\r\n//       setItems(data.results);\r\n//       setIsLoading(false);\r\n//     } catch (error) {\r\n//       setError(true);\r\n//       setIsLoading(false);\r\n//       console.log(error);\r\n//     }\r\n//   };\r\n\r\n//   getTrailer();\r\n// }, [movieId]);\r\n"],"names":["movieId","useParams","iframeRef","useRef","_useGetMovieTrailerQu","useGetMovieTrailerQuery","trailers","data","isLoading","isError","_jsx","_Fragment","children","Loader","Box","sx","display","justifyContent","flexWrap","gap","mt","mb","results","length","style","fontSize","map","trailer","_jsxs","flexDirection","width","height","textAlign","marginBottom","color","name","src","concat","key","ref","title","id"],"sourceRoot":""}