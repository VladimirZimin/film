{"version":3,"file":"static/js/431.110e4cca.chunk.js","mappings":"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","sources":["components/Cast/Cast.js","components/Loader/Loader.styled.jsx","components/Loader/Loader.js","components/NotFound/NotFound.styled.jsx","components/NotFound/NotFound.js","services/api.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport api from \"services/api\";\r\nimport Loader from \"components/Loader/Loader\";\r\nimport NotFound from \"components/NotFound/NotFound\";\r\n\r\nconst Cast = () => {\r\n  const { movieId } = useParams();\r\n  const [films, setFilms] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const fetcCost = async () => {\r\n      try {\r\n        setIsLoading(true);\r\n        const cast = await api.getMoviesCredits(movieId);\r\n        setFilms(cast.cast);\r\n        setIsLoading(false);\r\n      } catch (error) {\r\n        setIsLoading(false);\r\n        console.log(error);\r\n      }\r\n    };\r\n    fetcCost();\r\n  }, [movieId]);\r\n\r\n  if (!films) return null;\r\n\r\n  return (\r\n    <div>\r\n      {isLoading ? (\r\n        <Loader />\r\n      ) : (\r\n        <ul>\r\n          {films.map((film) => (\r\n            <li key={film.id}>\r\n              {film.profile_path ? (\r\n                <img\r\n                  src={`https://image.tmdb.org/t/p/w500/${film.profile_path}`}\r\n                  alt={film.name}\r\n                />\r\n              ) : (\r\n                <NotFound />\r\n              )}\r\n              <p>Ім'я актора: {film.name}</p>\r\n              <p>Ім'я персонажа: {film.character}</p>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cast;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Wrap = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  gap: 30px;\r\n  height: 70vh;\r\n`;\r\n","import React from \"react\";\r\nimport { RotatingLines } from \"react-loader-spinner\";\r\nimport { Wrap } from \"./Loader.styled\";\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <Wrap>\r\n      <h2>Завантаження...</h2>\r\n      <RotatingLines\r\n        strokeColor=\"#ea5f5f\"\r\n        strokeWidth=\"5\"\r\n        animationDuration=\"0.75\"\r\n        width=\"96\"\r\n        visible={true}\r\n      />\r\n    </Wrap>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n","import React from \"react\";\r\nimport { Wrapper } from \"./NotFound.styled\";\r\nimport notFoundImg from \"../../img/image-not-found.png\";\r\n\r\nconst NotFound = () => {\r\n  return (\r\n    <Wrapper>\r\n      <img src={notFoundImg} alt=\"Зображення не знайдено\" />\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default NotFound;\r\n","import axios from \"axios\";\r\n\r\naxios.defaults.baseURL = \"https://api.themoviedb.org/3\";\r\nconst API_KEY = \"060719e53fa713f801520e62e92850bd\";\r\n// const PER_PAGE = 12;\r\n\r\nconst getTrendingMovieDay = async (page) => {\r\n  try {\r\n    const response = await axios.get(\r\n      `/trending/movie/day?api_key=${API_KEY}&page=${page}&language=uk-UA`\r\n    );\r\n\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\n\r\nconst getSearchMovies = async (query, page) => {\r\n  try {\r\n    const response = await axios.get(\r\n      `/search/movie?api_key=${API_KEY}&page=1&language=uk-UA&query=${query}&include_adult=true`\r\n    );\r\n\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\n\r\nconst getMoviesDetails = async (id) => {\r\n  try {\r\n    const response = await axios.get(\r\n      `/movie/${id}?api_key=${API_KEY}&&language=uk-UA`\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\n\r\nconst getMoviesCredits = async (id) => {\r\n  try {\r\n    const response = await axios.get(\r\n      `/movie/${id}/credits?api_key=${API_KEY}&&language=uk-UA`\r\n    );\r\n\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\n\r\nconst getMoviesReviews = async (id) => {\r\n  try {\r\n    const response = await axios.get(`/movie/${id}/reviews?api_key=${API_KEY}`);\r\n\r\n    return response.data.results;\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\n\r\nconst fetchGenreMovie = async () => {\r\n  const response = await axios.get(\r\n    `/genre/movie/list?api_key=${API_KEY}&language=uk-UA`\r\n  );\r\n\r\n  return response.data.genres;\r\n};\r\n\r\nconst fetchTrailersOfMovie = async (id) => {\r\n  try {\r\n    const responce = await axios.get(\r\n      `https://imdb-api.com/en/API/Trailer/k_mlq541ll/${id}`\r\n    );\r\n\r\n    return responce;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nconst api = {\r\n  getTrendingMovieDay,\r\n  getSearchMovies,\r\n  getMoviesDetails,\r\n  getMoviesCredits,\r\n  getMoviesReviews,\r\n  fetchGenreMovie,\r\n  fetchTrailersOfMovie,\r\n};\r\n\r\nexport default api;\r\n"],"names":["movieId","useParams","_useState","useState","_useState2","_slicedToArray","films","setFilms","_useState3","_useState4","isLoading","setIsLoading","useEffect","fetcCost","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","cast","wrap","_context","prev","next","api","sent","t0","console","log","stop","apply","arguments","_jsx","children","Loader","map","film","_jsxs","profile_path","src","concat","alt","name","NotFound","character","id","Wrap","styled","_templateObject","_taggedTemplateLiteral","RotatingLines","strokeColor","strokeWidth","animationDuration","width","visible","Wrapper","notFoundImg","axios","API_KEY","getTrendingMovieDay","page","response","abrupt","data","error","_x","getSearchMovies","_ref2","_callee2","query","_context2","_x2","_x3","getMoviesDetails","_ref3","_callee3","_context3","_x4","getMoviesCredits","_ref4","_callee4","_context4","_x5","getMoviesReviews","_ref5","_callee5","_context5","results","_x6","fetchGenreMovie","_ref6","_callee6","_context6","genres","fetchTrailersOfMovie","_ref7","_callee7","responce","_context7","_x7"],"sourceRoot":""}