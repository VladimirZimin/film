{"version":3,"file":"static/js/547.1b010d4a.chunk.js","mappings":"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","sources":["pages/Movies/Movies.styled.jsx","pages/Movies/Movies.js"],"sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin: 0 auto;\r\n  margin-top: 80px;\r\n`;\r\n","import Loader from \"components/Loader/Loader\";\r\nimport { Link, useLocation, useSearchParams } from \"react-router-dom\";\r\nimport NotFound from \"components/NotFound/NotFound\";\r\nimport { Wrapper } from \"./Movies.styled\";\r\nimport { useGetSearchMoviesQuery } from \"redux/movies/moviesApi\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectQuery } from \"redux/selectors\";\r\nimport { useEffect } from \"react\";\r\nimport Grid from \"@mui/material/Unstable_Grid2\";\r\nimport { Box, Card, ImageListItem, ImageListItemBar } from \"@mui/material\";\r\n\r\nconst Movies = () => {\r\n  const [searchParams, setSearchParams] = useSearchParams();\r\n  const location = useLocation();\r\n  const query = searchParams.get(\"query\") ?? \"\";\r\n  const searchQuery = useSelector(selectQuery);\r\n\r\n  useEffect(() => {\r\n    setSearchParams({ query: searchQuery });\r\n  }, [searchQuery, setSearchParams]);\r\n\r\n  const { data, isLoading, isError } = useGetSearchMoviesQuery(query);\r\n\r\n  return (\r\n    <Wrapper>\r\n      {isLoading && !isError ? (\r\n        <Loader />\r\n      ) : (\r\n        <>\r\n          <Grid container spacing={2} sx={{ mx: { xs: 5, md: 10, lg: 20 } }}>\r\n            {data.results.map((film) => {\r\n              return (\r\n                <Grid xl={2} lg={3} md={3} sm={4} xs={12} key={film.id}>\r\n                  <Card\r\n                    sx={{ backgroundColor: \"#252936\", borderRadius: \"8px\" }}\r\n                  >\r\n                    <Link to={`${film.id}`} state={{ from: location }}>\r\n                      {film.poster_path ? (\r\n                        <ImageListItem>\r\n                          <img\r\n                            id={film.id}\r\n                            src={`https://image.tmdb.org/t/p/w500/${film.poster_path}`}\r\n                            alt={film.title}\r\n                            loading=\"lazy\"\r\n                          />\r\n                          <ImageListItemBar\r\n                            position=\"below\"\r\n                            title={film.title}\r\n                            subtitle={`\r\n                            ${film.title} |\r\n                            ${film.release_date?.slice(0, 4)}\r\n                            `}\r\n                            sx={{\r\n                              px: \"10px\",\r\n                              fontSize: \"20px\",\r\n                              color: \"#ffffff\",\r\n\r\n                              \".MuiImageListItemBar-subtitle\": {\r\n                                color: \"#808191\",\r\n                              },\r\n                            }}\r\n                          ></ImageListItemBar>\r\n                          <Box\r\n                            component=\"p\"\r\n                            sx={{\r\n                              position: \"absolute\",\r\n                              top: \"7px\",\r\n                              right: \"7px\",\r\n                              display: \"flex\",\r\n                              justifyContent: \"center\",\r\n                              alignItems: \"center\",\r\n                              width: \"45px\",\r\n                              height: \"45px\",\r\n                              fontSize: \"17px\",\r\n                              fontWeight: 600,\r\n                              backgroundColor: \"#00000080\",\r\n                              color: \"#ffffff\",\r\n                              borderRadius: \"50%\",\r\n                              border: \"3px solid red\",\r\n                              borderColor: () => {\r\n                                if (film.vote_average?.toFixed(1) >= 7.5) {\r\n                                  return \"#1ca240\";\r\n                                } else if (\r\n                                  film.vote_average?.toFixed(1) <= 7.4 &&\r\n                                  film.vote_average?.toFixed(1) >= 6.1\r\n                                ) {\r\n                                  return \"#FFFF00\";\r\n                                }\r\n                              },\r\n                            }}\r\n                          >\r\n                            <span>{film.vote_average?.toFixed(1)}</span>\r\n                          </Box>\r\n                        </ImageListItem>\r\n                      ) : (\r\n                        <NotFound />\r\n                      )}\r\n                    </Link>\r\n                  </Card>\r\n                </Grid>\r\n              );\r\n            })}\r\n          </Grid>\r\n        </>\r\n      )}\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Movies;\r\n\r\n// const [films, setFilms] = useState([]);\r\n// const [isLoading, setIsLoading] = useState(false);\r\n\r\n// useEffect(() => {\r\n//   if (query === \"\") return;\r\n\r\n//   const fetchSearchMovie = async (query) => {\r\n//     try {\r\n//       setIsLoading(true);\r\n//       const film = await api.getSearchMovies(query);\r\n//       setFilms(film.results);\r\n//       setIsLoading(false);\r\n//     } catch (error) {\r\n//       setIsLoading(false);\r\n//       console.log(error);\r\n//     }\r\n//   };\r\n//   fetchSearchMovie(query);\r\n// }, [query]);\r\n"],"names":["Wrapper","styled","_templateObject","_taggedTemplateLiteral","_searchParams$get","_useSearchParams","useSearchParams","_useSearchParams2","_slicedToArray","searchParams","setSearchParams","location","useLocation","query","get","searchQuery","useSelector","selectQuery","useEffect","_useGetSearchMoviesQu","useGetSearchMoviesQuery","data","isLoading","isError","_jsx","children","Loader","_Fragment","Grid","container","spacing","sx","mx","xs","md","lg","results","map","film","_film$release_date","_film$vote_average4","xl","sm","Card","backgroundColor","borderRadius","Link","to","concat","id","state","from","poster_path","_jsxs","ImageListItem","src","alt","title","loading","ImageListItemBar","position","subtitle","release_date","slice","px","fontSize","color","Box","component","top","right","display","justifyContent","alignItems","width","height","fontWeight","border","borderColor","_film$vote_average","_film$vote_average2","_film$vote_average3","vote_average","toFixed","NotFound"],"sourceRoot":""}