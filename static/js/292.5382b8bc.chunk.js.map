{"version":3,"file":"static/js/292.5382b8bc.chunk.js","mappings":"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","sources":["components/Loader/Loader.styled.jsx","components/Loader/Loader.js","components/NotFound/NotFound.styled.jsx","components/NotFound/NotFound.js","pages/Home/Home.styled.jsx","pages/Home/Home.js","services/api.js"],"sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const Wrap = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  gap: 30px;\r\n  height: 70vh;\r\n`;\r\n","import React from \"react\";\r\nimport { RotatingLines } from \"react-loader-spinner\";\r\nimport { Wrap } from \"./Loader.styled\";\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <Wrap>\r\n      <h2>Завантаження...</h2>\r\n      <RotatingLines\r\n        strokeColor=\"#ea5f5f\"\r\n        strokeWidth=\"5\"\r\n        animationDuration=\"0.75\"\r\n        width=\"96\"\r\n        visible={true}\r\n      />\r\n    </Wrap>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n","import React from \"react\";\r\nimport { Wrapper } from \"./NotFound.styled\";\r\nimport notFoundImg from \"../../img/image-not-found.png\";\r\n\r\nconst NotFound = () => {\r\n  return (\r\n    <Wrapper>\r\n      <img src={notFoundImg} alt=\"Зображення не знайдено\" />\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default NotFound;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin: 0 auto;\r\n`;\r\n\r\nexport const List = styled.ul`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 15px;\r\n`;\r\n\r\nexport const Item = styled.li`\r\n  width: 200px;\r\n`;\r\n\r\nexport const ButtonWrap = styled.div`\r\n  margin: 50px auto;\r\n`;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nimport api from \"services/api\";\r\nimport { List, Item, ButtonWrap, Wrapper } from \"./Home.styled\";\r\nimport Loader from \"components/Loader/Loader\";\r\nimport NotFound from \"components/NotFound/NotFound\";\r\n\r\nconst Home = () => {\r\n  const [page, setPage] = useState(1);\r\n  const [totalPages, setTotalPages] = useState(1);\r\n  const [films, setFilms] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(false);\r\n  console.log(\"error:\", error);\r\n\r\n  const location = useLocation();\r\n\r\n  useEffect(() => {\r\n    const fetchMovies = async () => {\r\n      try {\r\n        setIsLoading(true);\r\n        const films = await api.getTrendingMovieDay(page);\r\n        setTotalPages(films.total_pages);\r\n        setFilms(films.results);\r\n        setIsLoading(false);\r\n      } catch (error) {\r\n        setError(true);\r\n        setIsLoading(false);\r\n        console.log(error);\r\n      }\r\n    };\r\n    fetchMovies();\r\n  }, [page]);\r\n\r\n  const handleDecrement = () => {\r\n    setPage((prev) => prev - 1);\r\n  };\r\n\r\n  const handleIncrement = () => {\r\n    setPage((prev) => prev + 1);\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      {isLoading ? (\r\n        <Loader />\r\n      ) : (\r\n        <>\r\n          <List>\r\n            {films.map((film) => {\r\n              return (\r\n                <Item key={film.id}>\r\n                  <Link to={`movies/${film.id}`} state={{ from: location }}>\r\n                    {film.poster_path ? (\r\n                      <img\r\n                        id={film.id}\r\n                        src={`https://image.tmdb.org/t/p/w500/${film.poster_path}`}\r\n                        alt={film.title}\r\n                        loading=\"lazy\"\r\n                      />\r\n                    ) : (\r\n                      <NotFound />\r\n                    )}\r\n                  </Link>\r\n                  <p>\r\n                    <span>{film.vote_average.toFixed(1)}</span>\r\n                  </p>\r\n\r\n                  <div>\r\n                    <p>\r\n                      {film.title} | {film.release_date.slice(0, 4)}\r\n                    </p>\r\n                  </div>\r\n                </Item>\r\n              );\r\n            })}\r\n          </List>\r\n\r\n          <ButtonWrap>\r\n            <button onClick={handleDecrement} disabled={page <= 1}>\r\n              Назад\r\n            </button>\r\n            <span> {page} </span>\r\n            <button onClick={handleIncrement} disabled={page >= totalPages}>\r\n              Вперед\r\n            </button>\r\n          </ButtonWrap>\r\n        </>\r\n      )}\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import axios from \"axios\";\r\n\r\naxios.defaults.baseURL = \"https://api.themoviedb.org/3\";\r\nconst API_KEY = \"060719e53fa713f801520e62e92850bd\";\r\n// const PER_PAGE = 12;\r\n\r\nconst getTrendingMovieDay = async (page) => {\r\n  try {\r\n    const response = await axios.get(\r\n      `/trending/movie/day?api_key=${API_KEY}&page=${page}&language=uk-UA`\r\n    );\r\n\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\n\r\nconst getSearchMovies = async (query, page) => {\r\n  try {\r\n    const response = await axios.get(\r\n      `/search/movie?api_key=${API_KEY}&page=1&language=uk-UA&query=${query}&include_adult=true`\r\n    );\r\n\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\n\r\nconst getMoviesDetails = async (id) => {\r\n  try {\r\n    const response = await axios.get(\r\n      `/movie/${id}?api_key=${API_KEY}&&language=uk-UA`\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\n\r\nconst getMoviesCredits = async (id) => {\r\n  try {\r\n    const response = await axios.get(\r\n      `/movie/${id}/credits?api_key=${API_KEY}&&language=uk-UA`\r\n    );\r\n\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\n\r\nconst getMoviesReviews = async (id) => {\r\n  try {\r\n    const response = await axios.get(`/movie/${id}/reviews?api_key=${API_KEY}`);\r\n\r\n    return response.data.results;\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\n\r\nconst fetchGenreMovie = async () => {\r\n  const response = await axios.get(\r\n    `/genre/movie/list?api_key=${API_KEY}&language=uk-UA`\r\n  );\r\n\r\n  return response.data.genres;\r\n};\r\n\r\nconst fetchTrailersOfMovie = async (id) => {\r\n  try {\r\n    const responce = await axios.get(\r\n      `https://imdb-api.com/en/API/Trailer/k_mlq541ll/${id}`\r\n    );\r\n\r\n    return responce;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nconst api = {\r\n  getTrendingMovieDay,\r\n  getSearchMovies,\r\n  getMoviesDetails,\r\n  getMoviesCredits,\r\n  getMoviesReviews,\r\n  fetchGenreMovie,\r\n  fetchTrailersOfMovie,\r\n};\r\n\r\nexport default api;\r\n"],"names":["Wrap","styled","_templateObject","_taggedTemplateLiteral","_jsxs","children","_jsx","RotatingLines","strokeColor","strokeWidth","animationDuration","width","visible","Wrapper","src","notFoundImg","alt","List","_templateObject2","Item","_templateObject3","ButtonWrap","_templateObject4","_useState","useState","_useState2","_slicedToArray","page","setPage","_useState3","_useState4","totalPages","setTotalPages","_useState5","_useState6","films","setFilms","_useState7","_useState8","isLoading","setIsLoading","_useState9","_useState10","error","setError","console","log","location","useLocation","useEffect","fetchMovies","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_films","wrap","_context","prev","next","api","sent","total_pages","results","t0","stop","apply","arguments","Loader","_Fragment","map","film","Link","to","concat","id","state","from","poster_path","title","loading","NotFound","vote_average","toFixed","release_date","slice","onClick","disabled","axios","API_KEY","getTrendingMovieDay","response","abrupt","data","_x","getSearchMovies","_ref2","_callee2","query","_context2","_x2","_x3","getMoviesDetails","_ref3","_callee3","_context3","_x4","getMoviesCredits","_ref4","_callee4","_context4","_x5","getMoviesReviews","_ref5","_callee5","_context5","_x6","fetchGenreMovie","_ref6","_callee6","_context6","genres","fetchTrailersOfMovie","_ref7","_callee7","responce","_context7","_x7"],"sourceRoot":""}